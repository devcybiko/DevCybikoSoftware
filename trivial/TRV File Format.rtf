{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f74\froman\fcharset238\fprq2 Times New Roman CE;}{\f75\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f77\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f78\froman\fcharset162\fprq2 Times New Roman Tur;}{\f79\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f80\fswiss\fcharset238\fprq2 Arial CE;}{\f81\fswiss\fcharset204\fprq2 Arial Cyr;}{\f83\fswiss\fcharset161\fprq2 Arial Greek;}
{\f84\fswiss\fcharset162\fprq2 Arial Tur;}{\f85\fswiss\fcharset186\fprq2 Arial Baltic;}{\f164\fswiss\fcharset238\fprq2 Tahoma CE;}{\f165\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f167\fswiss\fcharset161\fprq2 Tahoma Greek;}
{\f168\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f169\fswiss\fcharset186\fprq2 Tahoma Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\s1\sb240\sa60\keepn\nowidctlpar\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sb240\sa60\keepn\nowidctlpar\widctlpar\adjustright \b\i\f1\cgrid 
\sbasedon0 \snext0 heading 2;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \cbpat9 \f15\fs20\cgrid \sbasedon0 \snext15 Document Map;}{\s16\qc\sb240\sa60\nowidctlpar\widctlpar\outlinelevel0\adjustright 
\b\f1\fs32\kerning28\cgrid \sbasedon0 \snext16 Title;}{\s17\li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext17 Body Text 2;}}{\*\listtable{\list\listtemplateid67698719{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'04\'00.\'01.;}{\levelnumbers\'01\'03;}\fi-432\li792
\jclisttab\tx792 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'06\'00.\'01.\'02.;}{\levelnumbers\'01\'03\'05;}\fi-504\li1224\jclisttab\tx1224 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'08\'00.\'01.\'02.\'03.;}{\levelnumbers\'01\'03\'05\'07;}\fi-648\li1728\jclisttab\tx1728 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'0a\'00.\'01.\'02.\'03.\'04.;}{\levelnumbers\'01\'03\'05\'07\'09;}\fi-792\li2232\jclisttab\tx2232 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0c\'00.\'01.\'02.\'03.\'04.\'05.;}{\levelnumbers
\'01\'03\'05\'07\'09\'0b;}\fi-936\li2736\jclisttab\tx2736 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0e\'00.\'01.\'02.\'03.\'04.\'05.\'06.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\fi-1080\li3240
\jclisttab\tx3240 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'10\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\fi-1224\li3744\jclisttab\tx3744 }{\listlevel
\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'12\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\fi-1440\li4320\jclisttab\tx4320 }{\listname ;}\listid1917736970}}
{\*\listoverridetable{\listoverride\listid1917736970\listoverridecount0\ls1}}{\info{\title TRV File Format}{\author gsmith3}{\operator gsmith3}{\creatim\yr2001\mo10\dy25\hr2\min17}{\revtim\yr2001\mo10\dy25\hr2\min17}{\version2}{\edmins0}{\nofpages4}
{\nofwords972}{\nofchars5543}{\*\company The Alcor Group, Inc.}{\nofcharsws6807}{\vern71}}\widowctrl\ftnbj\aenddoc\formshade\viewkind1\viewscale114\viewzk2\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s16\qc\sb240\sa60\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid {TRV File Format
\par {\listtext\pard\plain\s1 \b\f1\fs28\kerning28\cgrid \hich\af1\dbch\af0\loch\f1 1.\tab}}\pard\plain \s1\fi-360\li360\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid {Introduction
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
The TRV file format is designed to be both a simple and interchangeable format for use in different trivia applications.  It supports the use of multiple categories, multiple point values, a variable number of answers, and a co
unter for the number of times a question has been used.  A supplied B2C function library allows for easy access to the file format without knowledge of the internals.  The supplied }{\b\i 2trv}{
 program (PC Console app) converts a ASCII data format into the .trv format.
\par 
\par {\listtext\pard\plain\s1 \b\f1\fs28\kerning28\cgrid \hich\af1\dbch\af0\loch\f1 2.\tab}}\pard\plain \s1\fi-360\li360\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid {ASCII Format
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {The following ASCII format is for use with the }{\b\i 2trv}{
 application.  Each line of the file is a single question.  Each question is broken up into fields by vertical bars (|).  There are no blank lines or comment lines allowed.  Generally ASCII format files end it a .dat extension.
\par 
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 2.1.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Example:
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {PointIndex|Category|Question|*Answer1|Answer2|Answer3|Answer4|...
\par 0|What is the air speed velocity of an unlaiden swallow?|15 mph|*20mph|25mph|30mph
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 2.2.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Field 1: Point index
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {The point index starts at zero an
d goes as high as desired depending on the trivia application.  Note that this is an index and not a point value.  The application should assign a point value.  (For example, Trivial.app uses 100 points for a 0-point index and 250 for a 1.)
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 2.3.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Field 2: Category
\par }\pard\plain \s17\li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {The Category is the area of interest for the question.  It can be any length. This may be ignored by the application.  (For example Trivial.app uses this field as the Cat: line)
\par 
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 2.4.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Field 3: Question
\par }\pard\plain \s17\li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {This is the question portion of the record.  It can be any length.
\par 
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 2.5.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Fields 4-n: Answers
\par }\pard\plain \s17\li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
These fields represent the answers to the question.  Answers may be any length. You may have as few as zero and as many as you like.  By convention the answer beginning with an asterisk (*) is the correct one.  In Trivial.app 4 questions are used.
\par }\pard \s17\nowidctlpar\widctlpar\adjustright {
\par {\listtext\pard\plain\s1 \b\f1\fs28\kerning28\cgrid \hich\af1\dbch\af0\loch\f1 3.\tab}}\pard\plain \s1\fi-360\li360\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid {2trv \endash 
 convert from .dat to .trv
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {\b\i 2trv}{
 will convert a .dat ASCII formatted file into a .trv-formatted file.  .trv is a binary format (described below) and is the ultimate deliverable to the application.  The command-line format is:
\par }\pard \qc\nowidctlpar\widctlpar\adjustright {
\par 2trv filename.dat
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par the resultant file is filename.trv
\par 
\par {\listtext\pard\plain\s1 \b\f1\fs28\kerning28\cgrid \hich\af1\dbch\af0\loch\f1 4.\tab}}\pard\plain \s1\fi-360\li360\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid {.trv binary format
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {The .trv binary format is designed to create a fast question lookup based on the point index of questions.  Questions may be looked up by their point index or by their position in 
the file.  The file is organized as a record for the number of entries, an array of offset records, followed by a lightly encoded ASCII data section (which is merely the original data with CR/LF turned into NULLS)
\par 
\par All integers are stored in Cybiko Byte Order.
\par 
\par The first 2 bytes are the number of records in the file \endash  \lquote n\rquote 
\par 
\par The next sets of bytes are 12-byte records indicating the position of each record in the file.  These records are sorted by point-index.  There are \lquote n\rquote  of these records. The C structure for these records is:
\par struct trv \{
\par \tab long offset; // from beginning of file to question record
\par \tab long point_index; // 0-n index of point value
\par \tab short usage; // number of times this question has been used
\par \tab short padding; // zero
\par \};
\par 
\par The remainder of the file is the ASCII data file encoded by exclusive-or\rquote 
ing each byte with 0xAA.  This is not to make the records impossible to decrypt, only to make it difficult for the casual user to read the answers.  Each CR/LF has been replaced with 2 NULL bytes.  The NULLs are not encrypted.
\par 
\par {\listtext\pard\plain\s1 \b\f1\fs28\kerning28\cgrid \hich\af1\dbch\af0\loch\f1 5.\tab}}\pard\plain \s1\fi-360\li360\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid {TRV.B2C \endash 
 the function library
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {The TRV.B2C function library is a general set of functions for the B2C programmer to use in creating their trivia application.  It can support only 1 open trivia file at a time.
\par 
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.1.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {sub trv_open(s[] as char, trv as int) 
\endash  open a trivia file
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_open() will open a trivia file. 
\par \lquote s\rquote  is a string containing the trivia filename
\par trv is a file number (0-7) of a b2c file handle
\par This function opens the file and creates an array of offsets to the point indexes (this is for fast point index lookup)
\par 
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.2.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {sub trv_close(trv as int) \endash 
 close a trivia file
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_close() will close a trivia file
\par }\pard\plain \s17\li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv is a filenumber previously passed to trv_open()
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.3.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {function trv_nquestions(trv as int) as int 
\endash  return the # of questions
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_nquestions() will return the number of questions in a trivia file
\par trv is a filenumber previously passed to trv_open()
\par 
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.4.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {
function trv_points(trv as int, n as int) as long \endash  return the points
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_points() returns the point index of a question
\par trv is a filenumber previously passed to trv_open()
\par n is the index of the question in the file to find the point index of
\par 
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.5.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {
function trv_usage(trv as int, n as int) as int \endash  return the usage
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_usage() returns the number of times a question has been used
\par trv is a filenumber previously passed to trv_open()
\par n is the index of the question in the file to find the usage of
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.6.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {sub trv_inc_usage(trv as int, n as int) 
\endash  increment a questions usage
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_inc_usage() adds one to the usage of a trivia question
\par trv is a filenumber previously passed to trv_open()
\par n is the index of the question in the file to find the usage of
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.7.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {
function trv_find(trv as int, points as long) as int \endash  choose a question
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_find() will locate a question with point index }{\i points}{ and of minimal usage
\par trv is a filenumber previously passed to trv_open()
\par points is the point index of the question to find
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.8.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {
function trv_nanswers(trv as int, i as int) as int \endash  return number of answers to a question
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_answers() returns the number of answers to a question
\par trv is a filenumber previously passed to trv_open()
\par i is the index of the question
\par 
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.9.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {
function trv_answers(trv as int, i as int, j as int, s[] as char) as int \endash  get the text of an answer
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_answers() returns TRUE if this question is the right answer (begins with *) and FALSE otherwise.  The text of the answer is placed in the character array }{\i s}{
 which must contain enough space to hold the answer
\par trv is a filenumber previously passed to trv_open()
\par i is the index of the question
\par j is the index of the answer to receive (only valid up to trv_nanswers()-1)
\par s is the receiving character field.  If the answer begins with an asterisk (*) then TRUE is returned and the asterisk is trimmed from the field before being returned.
\par 
\par 
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.10.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {
sub trv_question(trv as int, i as int, s[] as char) \endash  return the question text
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_question()  The text of the question is placed in the character array }{\i s}{ which must contain enough space to hold the question
\par trv is a filenumber previously passed to trv_open()
\par i is the index of the question
\par s is the receiving character field.
\par {\listtext\pard\plain\s2 \b\i\f1\cgrid \hich\af1\dbch\af0\loch\f1 5.11.\tab}}\pard\plain \s2\fi-432\li792\sb240\sa60\keepn\nowidctlpar\widctlpar\jclisttab\tx792\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {sub t
rv_category(trv as int, i as int, s[] as char) \endash  return the category text
\par }\pard\plain \li360\nowidctlpar\widctlpar\adjustright \fs20\cgrid {trv_category()  The text of the category is placed in the character array }{\i s}{ which must contain enough space to hold the category
\par trv is a filenumber previously passed to trv_open()
\par i is the index of the category
\par s is the receiving character field.
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par }}