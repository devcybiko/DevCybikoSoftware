'
' board.b2c
' all functions dealing with the chess board
'

'
' board array
' edges are set to -1 to validate moves easily
' empty spaces are set to 0
' pieces are set to sprite value+1
'
dim board[10,10] as int

'
' cursor ('X' selects a piece)
'
dim cursor_row as int
dim cursor_col as int
cursor_row = 5
cursor_col = 5

'
' marker (marks a selected piece)
'
dim marker_row as int
dim marker_col as int
marker_row = -1
marker_col = -1

'
' reset board to initial settings
'
sub board_reset()
  'reset all empty squares
  for i=0 to 9
    for j=0 to 9
	board[i,j]=0
    next
  next
  'set edges to -1
  for i=0 to 9
    board[0,i]=-1
    board[9,i]=-1
    board[i,0]=-1
    board[i,9]=-1
  next
  'set the pawns
  for i=1 to 8
    board[2,i] = spr_wp+1
    board[7,i] = spr_bp+1
  next
  board[1,1] = spr_wr+1
  board[1,2] = spr_wn+1
  board[1,3] = spr_wb+1
  board[1,4] = spr_wq+1
  board[1,5] = spr_wk+1
  board[1,6] = spr_wb+1
  board[1,7] = spr_wn+1
  board[1,8] = spr_wr+1
  board[8,1] = spr_br+1
  board[8,2] = spr_bn+1
  board[8,3] = spr_bb+1
  board[8,4] = spr_bq+1
  board[8,5] = spr_bk+1
  board[8,6] = spr_bb+1
  board[8,7] = spr_bn+1
  board[8,8] = spr_br+1
end sub

sub board_repaint()
  paper dkgrey
  move 1,4,0,spr_board
  redraw 1
  move 1,0,4,spr_lnums
  redraw 1
  move 1,9,91,spr_ah
  redraw 1
  for i=1 to 8
    for j=1 to 8
	if (board[i,j]) then
	  move 1,(j-1)*11+5,(8-i)*11+1,board[i,j]-1
	  redraw 1
	endif
    next
  next
  paper white
  if (cursor_row > 0) then
    move 1,(cursor_col-1)*11+5,(8-cursor_row)*11+1,spr_marker
    redraw 1
  endif
  if (marker_row > 0) then
    move 1, (marker_col-1)*11+5, (8-marker_row)*11+1,spr_xmarker
    redraw 1
  endif
end sub

